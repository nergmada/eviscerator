version: 2
jobs:
  build-debug:
    docker:
    - image: circleci/rust:latest
    steps:
      - checkout
      - run: cargo build -p eviscerator --bin eviscerator --target-dir ./build
  build-release:
    docker:
    - image: circleci/rust:latest
    steps:
      - checkout
      - run: cargo build --release -p eviscerator --bin eviscerator --target-dir ./build
      - run: mkdir artifacts/eviscerator-release
      - run: cp -r pddl/ ./artifacts/eviscerator-release
      - run: cp ./build/release/eviscerator ./artifacts/eviscerator-release
      - run: zip -r eviscerator-release.zip ./artifacts/eviscerator-release/
      - persist_to_workspace:
          root: ./artifacts
          paths:
            - eviscerator-release.zip
  publish-release:
    docker:
      - image: cibuilds/github:0.10
      steps:
        - attach_workspace:
            at: ./artifacts
        - run:
            name: "Publish Release on GitHub"
            command: |
              VERSION=$(my-binary --version)
              ghr -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -t ${GITHUB_TOKEN} -n "`cat version.txt`" ./artifacts/eviscerator-release.zip
  publish-prerelease:
    docker:
      - image: cibuilds/github:0.10
      steps:
        - attach_workspace:
            at: ./artifacts
        - run:
            name: "Publish Release on GitHub"
            command: |
              VERSION=$(my-binary --version)
              ghr -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -t ${GITHUB_TOKEN} -n "`cat version.txt` Prerelease" -prerelease ./artifacts/eviscerator-release.zip
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build-debug:
          filters:
            branches:
              ignore:
                - master
      - build-release:
          filters:
            branches:
              only:
                - master
                - prerelease
      - deploy:
          filters:
            branches:
              only:
                - master
      - deploy-prerelease:
          filters:
            branches:
              only:
                - prerelease